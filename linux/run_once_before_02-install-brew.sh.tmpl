{{- /* Homebrew is not quite supported on ARM64, so skip installation in Windows and in that architecture. */ -}}
{{- if (and (ne .chezmoi.os "windows") (ne .chezmoi.arch "arm64")) -}}
{{- /*
See https://www.chezmoi.io/user-guide/frequently-asked-questions/troubleshooting/#chezmoi-reports-forkexec-no-such-file-or-directory-when-running-scripts-on-termux
for details on the line below. Needed for this script to run successfully in Github Codespaces.
*/ -}}
#!{{- lookPath "bash" }}

{{ if eq .chezmoi.os "linux" -}}
# Install pre-requisites (https://docs.brew.sh/Homebrew-on-Linux#requirements).
sudo apt install --yes --no-install-recommends \
  build-essential \
	procps \
	curl \
	file \
	git;
{{- end }}

# Install Homebrew per the instructions in https://brew.sh/,
# but using a fixed version of the install script that I've read and validated.
NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/805136bcfcbc40b95e476639fb2407773ab26445/install.sh)"

# Update Homebrew. Use absolute path since at this point it's not in the PATH yet.
/home/linuxbrew/.linuxbrew/bin/brew update --force --quiet;

# The commands below are (kind of) output by the Homebrew installer as "Next steps" but I'm including them
# here because I install it in a non-interactive way above.

# Note: I don't really use the ~/.profile file, but it's probably getting used when chezmoi runs scripts,
# so it's convenient to update it to allow next steps to call brew (which I do to install some things).
# More importantly, .zshrc also runs this eval so the Homebrew env variable updates (including to PATH)
# are in effect when I'm actually creating shells myself.
echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
# This gives this "session" (the execution of this script) access to brew.
# Not currently used, but just in case.
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

{{- end }}
